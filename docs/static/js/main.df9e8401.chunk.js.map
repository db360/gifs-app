{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","catg","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAwB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAqBA,OAEI,sBAAMC,SAhBW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAUlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAzBe,SAAEP,GAEzBF,EAAcE,EAAEQ,OAAOF,a,QCVlBG,EAAc,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIjC,OACI,sBAAKC,UAAU,8CAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,kCAAMA,S,uBCPLK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,+DAGAG,MAAOR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVvB,kBAgBZY,GAhBY,4CAAH,sDCKPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0BpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAW,WAEPlB,EAASC,GACJkB,MAAM,SAAAC,GAECC,QAAQC,IAAIF,GACZH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAG1B,CAACd,IAGGe,EDjB0BO,CAActB,GAAlCW,EAAb,EAAQL,KAAaQ,EAArB,EAAqBA,QAEjB,OACI,qCACI,qBAAIlB,UAAU,iBAAd,cAAkCI,EAAlC,OAEEc,GAAW,mBAAGlB,UAAU,iBAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQe,EAAOH,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEhB7Ba,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,eAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAIA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWhB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCXlCyB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.df9e8401.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ( { setCategories} ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange =  ( e ) => {\r\n       \r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){     // Validacion para no enviar en blanco\r\n            \r\n            setCategories( catg => [ inputValue, ...catg] );\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n        // console.log('Submit Realizado')\r\n        // Lammar setCategories\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit }>    \r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const GifGridItem = ( {title, url} ) => {\r\n\r\n    // console.log(id, title, url);\r\n\r\n    return (\r\n        <div className=\"card animate__fadeInLeftBig animate__fadeIn\">\r\n            <img src={url} alt={title} />\r\n            <p> { title }</p>\r\n        </div>\r\n    )\r\n}","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI (category) }&limit=12&api_key=3PZJO8S91AgcoUO9bPy1bkmbX4HTaXnt`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    // console.log(gifs)\r\n    \r\n    return gifs;\r\n    \r\n}","// import React, { useState, useEffect } from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n        return (\r\n            <>\r\n                <h3 className=\"animate__pulse\"> { category } </h3>\r\n\r\n                { loading && <p className=\"animate__swing\">Loading</p> }\r\n\r\n                <div className=\"card-grid\">\r\n                \r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem\r\n                                key={ img.id } \r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n                \r\n                </div>\r\n            </> \r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                    console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n            })\r\n    }, [category]);\r\n\r\n\r\n    return state; // {data:[], loading:true } ----> state\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories, setCategories] = useState(['Thundercat']);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key={ category }\r\n                            category={ category } \r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\n\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// crear un componente llamado GifExpertApp \n// <h2>GifExpertApp</h2>\n// <hr />"],"sourceRoot":""}